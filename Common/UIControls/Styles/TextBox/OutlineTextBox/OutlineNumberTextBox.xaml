<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UIControls">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/UIControls;component/Styles/TextBox/TextBox/TextBoxCommon.xaml"/>
    <!--<ResourceDictionary Source="/Control.TextBox/TextBox/TextBoxCommon.xaml"/>-->
  </ResourceDictionary.MergedDictionaries>

  <!-- Watermark -->
  <Style  x:Key="OutlineTextBlockStyle" TargetType="{x:Type local:OutlineTextBlock}">
    <Setter Property="Focusable" Value="false" />
    <Setter Property="IsHitTestVisible" Value="false" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="Tahoma" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="StrokeThickness" Value="1" />
    <Setter Property="StrokePosition" Value="Outside" />
    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}" />
    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path= OutlineStroke}" />
    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path= OutlineFill}" />
  </Style>

  <Style TargetType="{x:Type local:OutlineTextBox}" BasedOn="{StaticResource DefaultTextBoxStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:OutlineTextBox}">
          <Grid Focusable="True" FocusVisualStyle="{x:Null}" x:Name="RootGrid">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="auto" />
              <ColumnDefinition Width="auto" />
              <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <!-- Prefix -->
            <Grid Grid.Column="0">
              <local:OutlineTextBlock x:Name="prefix" Style="{StaticResource OutlineTextBlockStyle}"
                         Text="{TemplateBinding Prefix}" />
            </Grid>

            <Border x:Name="Border" Grid.Column="1"
                  Padding="2,0,2,0"
                  CornerRadius="{StaticResource TextBox_CornerRadius}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="True">
              <Grid>
                <ScrollViewer x:Name="PART_ContentHost"
                              Focusable="false"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden" />
                <local:OutlineTextBlock x:Name="Watermark" Style="{StaticResource OutlineTextBlockStyle}"
                                          Text="{TemplateBinding Watermark}" />
              </Grid>
            </Border>

            <!-- postfix -->
            <Grid Grid.Column="2">
              <local:OutlineTextBlock x:Name="postfix" Style="{StaticResource OutlineTextBlockStyle}"
                                      Text="{TemplateBinding Postfix}" />
            </Grid>
          </Grid>

          <ControlTemplate.Triggers>
            <!--<Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Foreground" Value="{StaticResource TextBox_Foreground.MouseOver}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox_BorderBrush.MouseOver}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox_Background.MouseOver}" />
            </Trigger>-->

            <!-- MouseOver (No Focused) -->
            <DataTrigger Value="True">
              <DataTrigger.Binding>
                <MultiBinding Converter="{local:NoFocusMouseOverConverter}">
                  <Binding RelativeSource="{RelativeSource Self}" Path="IsMouseOver"/>
                  <Binding RelativeSource="{RelativeSource Self}" Path="IsFocused"/>
                </MultiBinding>
              </DataTrigger.Binding>
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox_BorderBrush.MouseOver}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox_Background.MouseOver}" />
            </DataTrigger>

            <!-- ToolTip -->
            <DataTrigger Value="True">
              <DataTrigger.Binding>
                <MultiBinding Converter="{local:ToolTipVisibilityConverter}">
                  <Binding RelativeSource="{RelativeSource Self}" Path="IsMouseOver"/>
                  <Binding RelativeSource="{RelativeSource Self}" Path="IsFocused"/>
                  <Binding RelativeSource="{RelativeSource Self}" Path="ToolTip" />
                </MultiBinding>
              </DataTrigger.Binding>
              <Setter Property="ToolTipService.IsEnabled" Value="True" />
            </DataTrigger>

            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ToolTip, Converter={local:StringToBooleanConverter}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="ToolTipService.IsEnabled" Value="True" />
            </MultiDataTrigger>





            <!--<Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="Foreground" Value="{StaticResource TextBox_Foreground.Focused}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox_BorderBrush.Focused}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox_Background.Focused}" />
              <Setter Property="Visibility" TargetName="Watermark" Value="Collapsed" />
              <Setter Property="ToolTipService.IsEnabled" Value="False" />
            </Trigger>-->

            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Foreground" Value="{StaticResource TextBox_Foreground.Focused}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox_BorderBrush.Focused}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox_Background.Focused}" />
              <Setter Property="Visibility" TargetName="Watermark" Value="Collapsed" />
              <Setter Property="ToolTipService.IsEnabled" Value="False" />
            </Trigger>

            <Trigger Property="IsFocused" Value="false">
              <Setter Property="Foreground" Value="Transparent"/>
              <Setter Property="Background" Value="Transparent" />
              <Setter Property="Visibility" TargetName="Watermark" Value="visible" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox_Background.Disabled}" />
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>