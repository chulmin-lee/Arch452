<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UIControls">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/UIControls;component/Styles/TextBox/TextBox/TextBoxCommon.xaml"/>
    <!--<ResourceDictionary Source="TextBoxCommon.xaml"/>-->
  </ResourceDictionary.MergedDictionaries>

  <SolidColorBrush x:Key="Watermark_Foreground" Color="DarkGray"/>

  <!-- 구성 요소 (Header/Prefix/Postfix) -->
  <Style  x:Key="ElementTextBlockStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="Focusable" Value="false" />
    <Setter Property="IsHitTestVisible" Value="false" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Foreground" Value="{StaticResource TextBox_Foreground}" />
    <Setter Property="Background" Value="{StaticResource TextBox_Background}"/>
  </Style>

  <Style TargetType="{x:Type local:NumberTextBox}" BasedOn="{StaticResource DefaultTextBoxStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:NumberTextBox}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="{TemplateBinding HeaderWidth}" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Header -->
            <!-- TextBlock을 가운데 정렬하기 위해서 Border 사용. TextBlock 이외의 영역도 채워야 하므로 Height, Backgorund 설정 -->
            <Border Grid.Column="0" VerticalAlignment="Center"
                    Background="{StaticResource TextBox_Background}">

              <TextBlock x:Name="header" Style="{StaticResource ElementTextBlockStyle}"
                         Margin="{TemplateBinding HeaderMargin}"
                         HorizontalAlignment="{TemplateBinding HeaderHorizontalAlignment}"
                         Text="{TemplateBinding Header}" />
            </Border>

            <Border x:Name="Border" Grid.Column="1"
                  Padding="2,0,2,0"
                  CornerRadius="{StaticResource TextBox_CornerRadius}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="True">
              <Grid>
                <ScrollViewer x:Name="PART_ContentHost"
                              Focusable="false"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden" />
                <TextBlock x:Name="Watermark" Text="{TemplateBinding Watermark}"
                           FontSize="{TemplateBinding FontSize}"
                           FontWeight="{TemplateBinding FontWeight}"
                           FontFamily="{TemplateBinding FontFamily}"
                           FontStyle="{TemplateBinding FontStyle}"
                           Focusable="False" IsHitTestVisible="False"
                           Visibility="Collapsed"
                           VerticalAlignment="Center"
                           Background="Transparent"
                           Margin="2,0,0,0"
                           Foreground="{StaticResource TextBox_Foreground}"/>
              </Grid>
            </Border>
          </Grid>

          <ControlTemplate.Triggers>
            <!--<Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Foreground" Value="{StaticResource TextBox_Foreground.MouseOver}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox_BorderBrush.MouseOver}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox_Background.MouseOver}" />
            </Trigger>-->

            <!-- MouseOver (No Focused) -->
            <DataTrigger Value="True">
              <DataTrigger.Binding>
                <MultiBinding Converter="{local:NoFocusMouseOverConverter}">
                  <Binding RelativeSource="{RelativeSource Self}" Path="IsMouseOver"/>
                  <Binding RelativeSource="{RelativeSource Self}" Path="IsFocused"/>
                </MultiBinding>
              </DataTrigger.Binding>
              <Setter TargetName="Watermark" Property="Foreground" Value="{StaticResource TextBox_Foreground.Focused}" />
              <Setter TargetName="header" Property="Foreground" Value="{StaticResource TextBox_Foreground.Focused}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox_BorderBrush.MouseOver}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox_Background.MouseOver}" />
            </DataTrigger>

            <!-- ToolTip -->
            <DataTrigger Value="True">
              <DataTrigger.Binding>
                <MultiBinding Converter="{local:ToolTipVisibilityConverter}">
                  <Binding RelativeSource="{RelativeSource Self}" Path="IsMouseOver"/>
                  <Binding RelativeSource="{RelativeSource Self}" Path="IsFocused"/>
                  <Binding RelativeSource="{RelativeSource Self}" Path="ToolTip" />
                </MultiBinding>
              </DataTrigger.Binding>
              <Setter Property="ToolTipService.IsEnabled" Value="True" />
            </DataTrigger>

            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ToolTip, Converter={local:StringToBooleanConverter}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="ToolTipService.IsEnabled" Value="True" />
            </MultiDataTrigger>


            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="Foreground" Value="{StaticResource TextBox_Foreground.Focused}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox_BorderBrush.Focused}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox_Background.Focused}" />
              <Setter Property="Visibility" TargetName="Watermark" Value="Collapsed" />
              <Setter Property="ToolTipService.IsEnabled" Value="False" />
            </Trigger>

            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Foreground" Value="{StaticResource TextBox_Foreground.Focused}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox_BorderBrush.Focused}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox_Background.Focused}" />
              <Setter Property="Visibility" TargetName="Watermark" Value="Collapsed" />
              <Setter Property="ToolTipService.IsEnabled" Value="False" />
            </Trigger>

            <Trigger Property="IsFocused" Value="false">
              <Setter Property="Foreground" Value="transparent"/>
              <Setter Property="Background" Value="transparent" />
              <Setter Property="Visibility" TargetName="Watermark" Value="visible" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Watermark" Property="Foreground" Value="{StaticResource TextBox_Foreground.Disabled}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox_Background.Disabled}" />
            </Trigger>

            <!-- Header -->
            <Trigger Property="Header" Value="{x:Null}">
              <Setter TargetName="header" Property="Visibility" Value="Collapsed" />
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


</ResourceDictionary>